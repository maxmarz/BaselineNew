{% import "Ceres::PageDesign.Macros.IncludeComponents" as Loader %}
{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}
{% import "Ceres::PageDesign.Macros.Translations" as Translations %}
{{ component( "Ceres::PageDesign.Components.Notifications" ) }}
{{ component( "Ceres::Basket.Components.BasketPreview" ) }}
{{ component( "Ceres::Customer.Components.Login" ) }}
{{ component( "Ceres::Customer.Components.Registration" ) }}
{{ component( "Ceres::Basket.Components.AddItemToBasketOverlay" ) }}
{{ component( "Ceres::PageDesign.Components.Popper" ) }}
{# component( "CeresBaseline::Containers.Components.ContainerItemList" ) #}
{{ component( "CeresBaseline::ItemList.Components.ItemSearch" ) }}
{{ component( "Ceres::PageDesign.Components.MobileNavigation" ) }}
{{ component( "CeresBaseline::Newsletter.Components.NewsletterInput" ) }}
{{ component( "Ceres::Customer.Components.ForgotPassword" ) }}

{% set currencyFormat = config("Ceres.currency.format") %}
{% set defaultLanguage = services.webstoreConfig.getDefaultLanguage() %}

<!DOCTYPE html>

{% set findologicKey        = config("CeresBaseline.default.findologicKey") %}
{% set findologicIsActive   = config("CeresBaseline.default.findologicIsActive") and findologicKey|length > 0 %}

{% set shippingCat          = config("Ceres.global.shippingCostsCategoryId") %}
{% if config("CeresBaseline.default.contentPagesInMenu") == 'true' %}
    {% set categories           = services.category.getNavigationTree("all", lang, 6) %}
{% else %}
    {% set categories           = services.category.getNavigationTree("item", lang, 6) %}
{% endif %}


{% if services.template.isCategory() or services.template.isItem() %}
    {% set categoryBreadcrumbs = services.category.getHierarchy() %}
    {{ services.crossSelling.setType(config("Ceres.item.lists.cross_selling_type")) }}
{% endif %}




<html lang="{{ lang }}" data-framework="vue" prefix="og: http://ogp.me/ns#">
<head>
    {% include getPartial('head') %}

    {% block PartialHead %}
    {% endblock %}

    {% if findologicIsActive == "true" %}
        <script type="text/javascript">
            (function() {

                var mainUrl = "https://cdn.findologic.com/static/{{ findologicKey }}/main.js";
                var loader = document.createElement('script');
                loader.type = 'text/javascript';

                loader.async = true;
                loader.src   = "https://cdn.findologic.com/static/loader.min.js";
                var s        = document.getElementsByTagName('script')[0];
                loader.setAttribute('data-fl-main', mainUrl);
                s.parentNode.insertBefore(loader, s);
            })();
        </script>
    {% endif %}

    {% for styleTemplate in get_additional_styles() %}
        {% include styleTemplate.path ignore missing with styleTemplate.params %}
    {% endfor %}

</head>

<body>
    <script>
        if('ontouchstart' in document.documentElement)
        {
            document.body.classList.add("touch");
        }
        else
        {
            document.body.classList.add("no-touch");
        }
    </script>
    <div id="vue-app">
        <!--    MESSAGES    -->
        <!--      START     -->
        <div class="wrapper wrapper-top">
            <notifications template="#vue-notifications" :initial-notifications="{{ notifications | json_encode() }}"></notifications>
        </div>
        <!--    MESSAGES   -->
        <!--       END     -->


        <!--    MOBILE MENU    -->
        <!--       START       -->
        <div class="left-sidebar" data-plentyflow-section="Mobile-Menu" data-plentyflow-onlyhomepage="true">
            {% include "CeresBaseline::PageDesign.Partials.Header.MobileNavigation" %}
        </div>
        <!--    MOBILE MENU    -->
        <!--        END        -->

        {% if basket is not defined %}
            {% set basket = services.basket.getBasketForTemplate() %}
        {% endif %}
        <!--    MOBILE BASKET    -->
        <!--        START        -->
        <div class="wrapper wrapper-right">
            <basket-preview
                    template="#vue-basket-preview"
                    :basket-data="{{ basket | json_encode() }}">
            </basket-preview>

        </div>
        <!--    MOBILE BASKET    -->
        <!--         END         -->


        <!--    FILTERS    -->
        <!--     START     -->
        <div class="wrapper wrapper-left">
        </div>
        <!--    FILTERS    -->
        <!--      END      -->


        <div class="wrapper">
            {% include getPartial('header') %}

            <div id="page-body" class="main">
                {% block PageBody %}
                    <!-- inject content of inherited templates here -->
                {% endblock %}
            </div>

            {% include getPartial('footer') %}

            {% block PartialFooter %}
            {% endblock %}
        </div>

        <div class="wrapper wrapper-bottom">

            <!--    LOGIN MODAL   -->
            <!--       START      -->
            <div id="login-modal-wrapper" data-plentyflow-section="Login-Modal" data-plentyflow-onlyhomepage="true">
                <div class="modal fade login-modal" id="login" tabindex="-1" role="dialog">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header" data-plentyflow-modul="Modal-Header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                <h3 data-plentyflow-element="title" class="modal-title">{{ trans("Ceres::Template.login") }}</h3>
                            </div>
                            <div class="modal-body">

                                {# TODO: needs to be defined by plenty, start level is MODUL #}
                                <login template="#vue-login" modal-element="login-modal-wrapper"></login>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--    LOGIN MODAL   -->
            <!--        END       -->

            <!-- REGISTRATION MODAL -->
            <div id="simple-registration-modal-wrapper">
                <div class="modal fade" id="registration" tabindex="-1" role="dialog">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                <div class="modal-title h3">
                                    {{ trans("Ceres::Template.regCreateAccount") }}

                                    <popper v-cloak class="pull-right m-r-3">
                                        <button slot="handle" class="btn btn-icon btn-secondary btn-sm">
                                            <i class="fa fa-info"></i>
                                        </button>
                                        <div slot="title">
                                            {{ trans("Ceres::Template.regContactInformations") }}
                                        </div>
                                        <ul slot="content" class='p-l-1'>
                                            <li class='m-b-1'>{{ trans('Ceres::Template.regContactInfoText1') }}</li>
                                            <li class='m-b-1'>{{ trans('Ceres::Template.regContactInfoText2') }}</li>
                                            <li class='m-b-1'>{{ trans('Ceres::Template.regContactInfoText2') }}</li>
                                            <li>{{ trans('Ceres::Template.regContactInfoText4') }}</li>
                                        </ul>
                                    </popper>
                                </div>
                            </div>
                            <registration template="#vue-registration" :is-simple-registration="true" modal-element="simple-registration-modal-wrapper"></registration>
                        </div>
                    </div>
                </div>
            </div>
            <!-- ./REGISTRATION MODAL -->

            <!--    SEARCH MODAL    -->
            <!--        START       -->
            <div id="simple-search-modal-wrapper" data-plentyflow-section="Search-Modal" data-plentyflow-onlyhomepage="true">
                <div class="modal fade" id="search" tabindex="-1" role="dialog">
                    <div class="modal-dialog">
                        <div class="modal-header" data-plentyflow-element="Modal-Header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">Ã—</span>
                            </button>
                            <h5 data-plentyflow-element="title">{{ trans('CeresBaseline::Template.searchPlaceholder') }}</h5>
                        </div>
                        <div class="modal-content" data-plentyflow-modul="Modal-Content">
                            <div class="modal-body">
                                {% if findologicIsActive == "true" %}
                                    <div class="search-box-inner">
                                        <div class="search-box-shadow-frame input-group">
                                            <form method="GET" id="searchForm">
                                                <input id="searchField" name="searchField" class="form-control" placeholder="{{ trans('CeresBaseline::Template.searchPlaceholder') }}" autofocus="" autocomplete="off" type="search" data-plentyflow-modul="Modal-Content">
                                                <span class="input-group-btn">
                                                    <button data-plentyflow-element="text, button" class="search-submit btn btn-primary" type="submit">
                                                        <i class="fa fa-search sm-up"></i>
                                                    </button>
                                                </span>
                                            </form>
                                        </div>
                                    {% else %}
                                        <div id="searchBox" class="cmp cmp-search-box">
                                            <item-search template="#vue-item-search"></item-search>
                                        </div>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--    SEARCH MODAL    -->
            <!--         END        -->

            <!-- BASKET MODAL -->
            <add-item-to-basket-overlay template="#vue-add-item-to-basket-overlay" :basket-add-information="{{ ceresConfig.basket.addItemToBasketConfirm | json_encode() }}"></add-item-to-basket-overlay>
            <!-- ./BASKET MODAL -->

            <!-- PASSWORD RESET MODAL -->
            <forgot-password-modal></forgot-password-modal>
            <!-- ./PASSWORD RESET MODAL -->

            <!-- SHIPPINGCOSTS MODAL -->
            <div id="shippingscosts-modal-wrapper">
                <div class="modal fade" id="shippingscosts" tabindex="-1" role="dialog">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                <div class="modal-title h3">{{ trans('Ceres::Template.itemShippingCosts') }}</div>
                            </div>
                            <div class="modal-body">
                                {% include category_template(ceresConfig.global.shippingCostsCategoryId, lang, webstoreConfig.webstoreId) ignore missing %}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- ./SHIPPINGCOSTS MODAL -->
        </div>
    </div>




    <div id="vue-error" style="display:none">
        {% include "Ceres::PageDesign.Partials.VueError" %}
    </div>

    <script>
        App = {
            config: {{ ceresConfig | json_encode | raw }},
            activeCurrency: "{{ currencyData[currencyFormat] }}",
            currencyPattern: {{  services.checkout.getCurrencyPattern() | json_encode | raw }},
            isCategoryView: {% if services.template.isCategory() == "1" %}true{% else %}false{% endif %},
            isCheckoutView : {% if services.template.isCheckout() == "1" %}true{% else %}false{% endif %},
            isSearch: {% if services.template.isSearch() == "1" %}true{% else %}false{% endif %},
            templateEvent: "{{templateEvent}}",
            language: "{{ lang }}",
            defaultLanguage: "{{ defaultLanguage }}",
            decimalSeparator: "{{ config("IO.format.separator_decimal") }}",
            urlTrailingSlash: {{ urls.appendTrailingSlash | json_encode }}
        };
    </script>

    {{ Loader.include_components() }}

    {{ LayoutContainer.show("Ceres::Script.Loader") }}

    {{ Translations.add( "Ceres", "Template" ) }}
    {% if config("Ceres.log.performance.level") == 'development' %}
        <script src="{{ plugin_path('Ceres') }}/js/dist/ceres-vendor.js"></script>
        <script src="{{ plugin_path('Ceres') }}/js/dist/ceres-app.js"></script>
        <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,300,200,600,700,400italic,300italic,600italic' rel='stylesheet' type='text/css'>
    {% else %}
        <script src="{{ plugin_path('Ceres') }}/js/dist/ceres.min.js"></script>
        <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,300,200,600,700,400italic,300italic,600italic' rel='stylesheet' type='text/css'>
    {% endif %}

    {% for scriptTemplate in get_additional_scripts() %}
        {% include scriptTemplate.path ignore missing with scriptTemplate.params %}
    {% endfor %}

    {{ LayoutContainer.show("Ceres::Script.AfterScriptsLoaded") }}

    {{ get_filtered_tags() }}

    <script>
        var rootElement = document.getElementById("vue-app");
        var errorElement = document.getElementById("vue-error");

        Vue.options.delimiters = ['${', '}'];

        var vueEventHub = new Vue();

        var vueApp = new Vue({
            store: window.ceresStore
        });
        vueApp.$mount( rootElement.cloneNode(true) );

        if ( vueApp.$el.id !== "vue-app")
        {
            rootElement.parentNode.removeChild(rootElement);
            errorElement.style.display = "block";
        }
        else
        {
            document.body.replaceChild( vueApp.$el, rootElement );
            errorElement.parentNode.removeChild(errorElement);
        }
    </script>

</body>
</html>
